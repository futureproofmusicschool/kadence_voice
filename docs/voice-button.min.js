(function(){var e={apiEndpoint:"https://kadencevoice-production.up.railway.app",defaultVoice:"Aoede",clientToken:"3a7c6f8d2e1b4a9c8f7e6d5c4b3a2e1d",button:null,voicePanel:null,websocket:null,mediaRecorder:null,audioContext:null,isRecording:!1,audioQueue:[],isInitialized:!1,init:function(){this.isInitialized||(this.addStyles(),this.createButton(),this.createVoicePanel(),this.isInitialized=!0)},addStyles:function(){const e=document.createElement("style");e.textContent=".gemini-voice-button{position:fixed;bottom:20px;right:20px;width:56px;height:56px;border-radius:50%;background-color:#A373F8;color:white;border:none;cursor:pointer;box-shadow:0 4px 8px rgba(0,0,0,0.2);display:flex;align-items:center;justify-content:center;z-index:9999;transition:all 0.3s ease}.gemini-voice-button:hover{transform:scale(1.05);box-shadow:0 6px 12px rgba(0,0,0,0.3)}.gemini-voice-button.recording{background-color:#ff4d4d;animation:pulse 1.5s infinite}@keyframes pulse{0%{box-shadow:0 0 0 0 rgba(255,77,77,0.7)}70%{box-shadow:0 0 0 10px rgba(255,77,77,0)}100%{box-shadow:0 0 0 0 rgba(255,77,77,0)}}.gemini-voice-panel{position:fixed;bottom:90px;right:20px;width:300px;background-color:#ffffff;border-radius:8px;box-shadow:0 4px 12px rgba(0,0,0,0.15);padding:16px;z-index:9998;display:none}.gemini-voice-panel-header{display:flex;justify-content:space-between;align-items:center;margin-bottom:12px}.gemini-voice-panel-title{font-weight:600;color:#111111;margin:0}.gemini-voice-close{background:none;border:none;color:#111111;cursor:pointer;font-size:18px}.gemini-voice-status{background-color:#f5f5f5;padding:8px 12px;border-radius:4px;margin-bottom:12px;font-size:14px;color:#555555}.gemini-voice-controls{display:flex;justify-content:center}.gemini-voice-record-btn{background-color:#A373F8;color:white;border:none;border-radius:4px;padding:8px 16px;cursor:pointer;font-weight:500}.gemini-voice-record-btn.recording{background-color:#ff4d4d}.gemini-message-container{max-height:200px;overflow-y:auto;margin-top:12px;border-top:1px solid #f0f0f0;padding-top:12px}.gemini-message{padding:8px 12px;margin-bottom:8px;border-radius:4px;max-width:85%;word-wrap:break-word}.gemini-message-user{background-color:#A373F8;color:white;margin-left:auto}.gemini-message-bot{background-color:#f0f0f0;color:#111111}",document.head.appendChild(e)},createButton:function(){this.button=document.createElement("button"),this.button.className="gemini-voice-button",this.button.innerHTML=this.getMicrophoneIcon(),this.button.setAttribute("title","Talk to Gemini"),this.button.setAttribute("aria-label","Talk to Gemini"),this.button.addEventListener("click",()=>{this.toggleVoicePanel()}),document.body.appendChild(this.button)},createVoicePanel:function(){this.voicePanel=document.createElement("div"),this.voicePanel.className="gemini-voice-panel",this.voicePanel.innerHTML='<div class="gemini-voice-panel-header"><h3 class="gemini-voice-panel-title">Gemini Voice Chat</h3><button class="gemini-voice-close">&times;</button></div><div class="gemini-voice-status">Ready to chat</div><div class="gemini-voice-controls"><button class="gemini-voice-record-btn">Start Recording</button></div><div class="gemini-message-container"></div>';const e=this.voicePanel.querySelector(".gemini-voice-close");e.addEventListener("click",()=>{this.hideVoicePanel()});const t=this.voicePanel.querySelector(".gemini-voice-record-btn");t.addEventListener("click",()=>{this.toggleRecording()}),document.body.appendChild(this.voicePanel)},toggleVoicePanel:function(){const e="block"===this.voicePanel.style.display;e?this.hideVoicePanel():this.showVoicePanel()},showVoicePanel:function(){this.voicePanel.style.display="block",this.websocket||this.initSession()},hideVoicePanel:function(){this.voicePanel.style.display="none",this.isRecording&&this.stopRecording()},initSession:async function(){try{this.updateStatus("Initializing session...");const e=window.chatbotConfig||{},t="session_"+Date.now()+"_"+Math.random().toString(36).substr(2,9),s=await fetch(`${this.apiEndpoint}/config`,{method:"POST",headers:{"Content-Type":"application/json","X-Client-Token":this.clientToken},body:JSON.stringify({voice:this.defaultVoice,session_id:t,username:e.username||"Guest",user_id:e.userId||"unknown",current_url:e.currentUrl||window.location.href})});if(!s.ok)throw new Error("Failed to initialize session");const i=await s.json();this.sessionId=i.session_id,this.token=i.token,this.connectWebSocket(),this.updateStatus("Ready to chat"),e.username?this.addMessage(`Hello ${e.username}! How can I help you today?`,"bot"):this.addMessage("Hello! How can I help you today?","bot")}catch(e){console.error("Error initializing session:",e),this.updateStatus("Error: Could not initialize session")}},connectWebSocket:function(){this.websocket&&this.websocket.close(),this.websocket=new WebSocket(`${this.getWebSocketUrl()}/stream/${this.token}`),this.websocket.onopen=()=>{console.log("WebSocket connected"),this.updateStatus("Connected")},this.websocket.onmessage=e=>{try{const t=JSON.parse(e.data);"audio_response"===t.type&&this.playAudioResponse(t.data)}catch(e){console.error("Error processing message:",e)}},this.websocket.onerror=e=>{console.error("WebSocket error:",e),this.updateStatus("Connection error")},this.websocket.onclose=()=>{console.log("WebSocket closed"),this.updateStatus("Disconnected")}},toggleRecording:function(){this.isRecording?this.stopRecording():this.startRecording()},startRecording:async function(){try{const e=await navigator.mediaDevices.getUserMedia({audio:!0});this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.mediaRecorder=new MediaRecorder(e);let t=[];this.mediaRecorder.ondataavailable=e=>{t.push(e.data)},this.mediaRecorder.onstop=async()=>{const e=new Blob(t,{type:"audio/webm"});t=[],this.sendAudioToBackend(e)},this.mediaRecorder.start(),this.isRecording=!0,this.updateRecordingUI(!0),this.updateStatus("Recording...")}catch(e){console.error("Error starting recording:",e),this.updateStatus("Error: Could not access microphone")}},stopRecording:function(){this.mediaRecorder&&this.isRecording&&(this.mediaRecorder.stop(),this.isRecording=!1,this.updateRecordingUI(!1),this.updateStatus("Processing..."))},sendAudioToBackend:async function(e){try{const t=new FileReader;t.readAsDataURL(e),t.onloadend=()=>{const e=t.result.split(",")[1];this.websocket&&this.websocket.readyState===WebSocket.OPEN?this.websocket.send(JSON.stringify({type:"audio_chunk",session_id:this.sessionId,data:e,sequence_number:0})):this.updateStatus("Error: Not connected")}}catch(e){console.error("Error sending audio:",e),this.updateStatus("Error: Could not send audio")}},playAudioResponse:function(e){try{const t=atob(e),s=new Uint8Array(t.length);for(let e=0;e<t.length;e++)s[e]=t.charCodeAt(e);const i=new Blob([s],{type:"audio/webm"}),o=URL.createObjectURL(i),n=new Audio(o);n.onplay=()=>{this.updateStatus("Playing response...")},n.onended=()=>{this.updateStatus("Ready to chat"),URL.revokeObjectURL(o)},n.onerror=()=>{this.updateStatus("Error playing audio"),URL.revokeObjectURL(o)},n.play()}catch(e){console.error("Error playing audio response:",e),this.updateStatus("Error: Could not play response")}},updateStatus:function(e){const t=this.voicePanel.querySelector(".gemini-voice-status");t&&(t.textContent=e)},updateRecordingUI:function(e){const t=this.voicePanel.querySelector(".gemini-voice-record-btn");t&&(t.textContent=e?"Stop Recording":"Start Recording",e?t.classList.add("recording"):t.classList.remove("recording")),e?this.button.classList.add("recording"):this.button.classList.remove("recording")},addMessage:function(e,t){const s=this.voicePanel.querySelector(".gemini-message-container");if(s){const i=document.createElement("div");i.className=`gemini-message gemini-message-${t}`,i.textContent=e,s.appendChild(i),s.scrollTop=s.scrollHeight}},getWebSocketUrl:function(){return this.apiEndpoint.replace(/^http/,"ws")},getMicrophoneIcon:function(){return'<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path><path d="M19 10v2a7 7 0 0 1-14 0v-2"></path><line x1="12" y1="19" x2="12" y2="23"></line><line x1="8" y1="23" x2="16" y2="23"></line></svg>'}};"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{e.init()}):e.init()})(); 